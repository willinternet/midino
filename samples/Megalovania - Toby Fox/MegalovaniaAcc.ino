

const int pin = 11; // Change pin number if necessary

void setup() {
    Serial.begin(9600);
    pinMode(pin, OUTPUT);
    Serial.println(" -- Megalovania --");
    Serial.println("By Toby Fox");
    Serial.println("Second voice");
}
void loop() {
    delay(8000.0);
    tone(pin, 146.8, 123.9583333333325); // D3
    delay(250.0);
    tone(pin, 146.8, 123.9583333333325); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 236.4583333333332); // D3
    delay(250.0);
    tone(pin, 130.8, 123.9583333333325); // C3
    delay(250.0);
    tone(pin, 130.8, 123.9583333333325); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.4583333333332); // C3
    delay(250.0);
    tone(pin, 123.48, 123.9583333333325); // B2
    delay(250.0);
    tone(pin, 123.48, 123.9583333333325); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 236.4583333333332); // B2
    delay(250.0);
    tone(pin, 116.56, 123.9583333333325); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.9583333333325); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.4583333333332); // C3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.458333333335); // C3
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 236.458333333335); // B2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.458333333335); // C3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.458333333335); // C3
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 236.458333333335); // B2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.458333333335); // C3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 355.20833333333); // D3
    delay(375.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 261.6, 123.95833333333428); // C4
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333286); // B2
    delay(125.0);
    tone(pin, 123.48, 125.0); // B2
    delay(125.0);
    tone(pin, 246.96, 230.20833333333002); // B3
    delay(230.20833333333002);
    tone(pin, 246.96, 6.250000000001421); // B3
    delay(19.791666666669983);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 261.6, 123.95833333333428); // C4
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 293.6, 117.70833333333286); // D4
    delay(125.0);
    tone(pin, 293.6, 117.70833333333286); // D4
    delay(125.0);
    tone(pin, 587.2, 123.95833333333428); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333333428); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333333286); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333333286); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333333286); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(125.0);
    tone(pin, 261.6, 117.70833333333286); // C4
    delay(125.0);
    tone(pin, 261.6, 117.70833333333286); // C4
    delay(125.0);
    tone(pin, 587.2, 123.95833333333428); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333333428); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333333286); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333333286); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333333286); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(125.0);
    tone(pin, 246.96, 117.70833333333286); // B3
    delay(125.0);
    tone(pin, 246.96, 117.70833333333286); // B3
    delay(125.0);
    tone(pin, 587.2, 123.95833333333428); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333333428); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333333286); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333333286); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333333286); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(125.0);
    tone(pin, 233.12, 117.70833333333286); // Bb3
    delay(125.0);
    tone(pin, 233.12, 117.70833333333286); // Bb3
    delay(125.0);
    tone(pin, 587.2, 123.95833333333428); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333333428); // A4
    delay(625.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333333286); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333333286); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333333286); // G4
    delay(125.0);
    tone(pin, 116.56, 248.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 130.8, 248.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.45833333333144); // C3
    delay(250.0);
    tone(pin, 146.8, 248.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 138.56, 248.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 123.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 117.70833333333286); // Db3
    delay(125.0);
    tone(pin, 138.56, 117.70833333333286); // Db3
    delay(250.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(125.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 116.56, 248.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333286); // Bb2
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 130.8, 248.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333286); // C3
    delay(125.0);
    tone(pin, 130.8, 236.45833333333144); // C3
    delay(250.0);
    tone(pin, 146.8, 248.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333286); // D3
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 138.56, 248.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 123.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 117.70833333333286); // Db3
    delay(125.0);
    tone(pin, 138.56, 117.70833333333286); // Db3
    delay(250.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333286); // Eb3
    delay(125.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 116.56, 248.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 130.8, 248.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 236.45833333333144); // C3
    delay(250.0);
    tone(pin, 146.8, 248.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 138.56, 248.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 123.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 117.70833333333997); // Db3
    delay(125.0);
    tone(pin, 138.56, 117.70833333333997); // Db3
    delay(250.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(125.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 116.56, 248.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 130.8, 248.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 236.45833333333144); // C3
    delay(250.0);
    tone(pin, 146.8, 248.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 138.56, 248.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 123.95833333333428); // Db3
    delay(250.0);
    tone(pin, 138.56, 117.70833333333997); // Db3
    delay(125.0);
    tone(pin, 138.56, 117.70833333333997); // Db3
    delay(250.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(250.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(125.0);
    tone(pin, 155.6, 117.70833333333997); // Eb3
    delay(125.0);
    tone(pin, 155.6, 236.45833333333144); // Eb3
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(250.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 123.95833333333428); // B2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(250.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 117.70833333333997); // Bb2
    delay(125.0);
    tone(pin, 116.56, 123.95833333333428); // Bb2
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(250.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 123.95833333333428); // D3
    delay(375.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 123.48, 117.70833333333997); // B2
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 130.8, 117.70833333333997); // C3
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 293.6, 123.95833333333428); // D4
    delay(250.0);
    tone(pin, 220.0, 123.95833333333428); // A3
    delay(375.0);
    tone(pin, 207.68, 117.70833333333997); // Ab3
    delay(250.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(250.0);
    tone(pin, 174.64, 236.45833333333144); // F3
    delay(250.0);
    tone(pin, 146.8, 117.70833333333997); // D3
    delay(125.0);
    tone(pin, 174.64, 117.70833333333997); // F3
    delay(125.0);
    tone(pin, 196.0, 117.70833333333997); // G3
    delay(125.0);
    tone(pin, 58.28, 248.95833333333428); // Bb1
    delay(250.0);
    tone(pin, 58.28, 236.45833333333144); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 65.4, 248.95833333333428); // C2
    delay(250.0);
    tone(pin, 65.4, 236.45833333333144); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 73.4, 248.95833333333428); // D2
    delay(250.0);
    tone(pin, 73.4, 236.45833333333144); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(250.0);
    tone(pin, 69.28, 117.70833333333997); // Db2
    delay(250.0);
    tone(pin, 69.28, 117.70833333333997); // Db2
    delay(250.0);
    tone(pin, 69.28, 117.70833333333997); // Db2
    delay(125.0);
    tone(pin, 69.28, 117.70833333333997); // Db2
    delay(125.0);
    tone(pin, 69.28, 117.70833333333997); // Db2
    delay(125.0);
    tone(pin, 138.56, 236.45833333333144); // Db3
    delay(250.0);
    tone(pin, 65.4, 248.95833333333428); // C2
    delay(250.0);
    tone(pin, 65.4, 236.45833333333144); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(250.0);
    tone(pin, 61.74, 117.70833333333997); // B1
    delay(250.0);
    tone(pin, 61.74, 117.70833333333997); // B1
    delay(250.0);
    tone(pin, 61.74, 117.70833333333997); // B1
    delay(125.0);
    tone(pin, 61.74, 117.70833333333997); // B1
    delay(125.0);
    tone(pin, 61.74, 117.70833333333997); // B1
    delay(125.0);
    tone(pin, 123.48, 236.45833333333144); // B2
    delay(250.0);
    tone(pin, 58.28, 248.95833333333428); // Bb1
    delay(250.0);
    tone(pin, 58.28, 236.45833333333144); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333333997); // Bb1
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 65.4, 248.95833333333428); // C2
    delay(250.0);
    tone(pin, 65.4, 236.45833333333144); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 130.8, 123.95833333333428); // C3
    delay(125.0);
    tone(pin, 65.4, 117.70833333333997); // C2
    delay(125.0);
    tone(pin, 73.4, 248.95833333333428); // D2
    delay(250.0);
    tone(pin, 73.4, 236.45833333333144); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 73.4, 248.95833333333428); // D2
    delay(250.0);
    tone(pin, 73.4, 236.45833333333144); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333333997); // D2
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 58.28, 248.95833333332007); // Bb1
    delay(250.0);
    tone(pin, 58.28, 236.45833333333144); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 65.4, 248.95833333332007); // C2
    delay(250.0);
    tone(pin, 65.4, 236.45833333333144); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 130.8, 123.95833333332007); // C3
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 73.4, 248.95833333332007); // D2
    delay(250.0);
    tone(pin, 73.4, 236.45833333333144); // D2
    delay(250.0);
    tone(pin, 73.4, 117.70833333332575); // D2
    delay(125.0);
    tone(pin, 73.4, 117.70833333332575); // D2
    delay(250.0);
    tone(pin, 69.28, 117.70833333332575); // Db2
    delay(250.0);
    tone(pin, 69.28, 117.70833333332575); // Db2
    delay(250.0);
    tone(pin, 69.28, 117.70833333332575); // Db2
    delay(125.0);
    tone(pin, 69.28, 117.70833333332575); // Db2
    delay(125.0);
    tone(pin, 69.28, 117.70833333332575); // Db2
    delay(125.0);
    tone(pin, 138.56, 236.45833333333144); // Db3
    delay(250.0);
    tone(pin, 65.4, 248.95833333332007); // C2
    delay(250.0);
    tone(pin, 65.4, 236.45833333333144); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(250.0);
    tone(pin, 61.74, 117.70833333332575); // B1
    delay(250.0);
    tone(pin, 61.74, 117.70833333332575); // B1
    delay(250.0);
    tone(pin, 61.74, 117.70833333332575); // B1
    delay(125.0);
    tone(pin, 61.74, 117.70833333332575); // B1
    delay(125.0);
    tone(pin, 61.74, 117.70833333332575); // B1
    delay(125.0);
    tone(pin, 123.48, 236.45833333333144); // B2
    delay(250.0);
    tone(pin, 58.28, 248.95833333332007); // Bb1
    delay(250.0);
    tone(pin, 58.28, 236.45833333333144); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(250.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 58.28, 117.70833333332575); // Bb1
    delay(125.0);
    tone(pin, 116.56, 236.45833333333144); // Bb2
    delay(250.0);
    tone(pin, 65.4, 248.95833333332007); // C2
    delay(250.0);
    tone(pin, 65.4, 236.45833333333144); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(250.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 130.8, 123.95833333332007); // C3
    delay(125.0);
    tone(pin, 65.4, 117.70833333332575); // C2
    delay(125.0);
    tone(pin, 146.8, 248.95833333332007); // D3
    delay(250.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 146.8, 248.95833333332007); // D3
    delay(250.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(250.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 117.70833333332575); // D3
    delay(125.0);
    tone(pin, 146.8, 236.45833333333144); // D3
    delay(250.0);
    tone(pin, 233.12, 117.70833333332575); // Bb3
    delay(125.0);
    tone(pin, 233.12, 117.70833333332575); // Bb3
    delay(125.0);
    tone(pin, 587.2, 123.95833333332007); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333332007); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333332575); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333332575); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(125.0);
    tone(pin, 261.6, 117.70833333332575); // C4
    delay(125.0);
    tone(pin, 261.6, 117.70833333332575); // C4
    delay(125.0);
    tone(pin, 587.2, 123.95833333332007); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333332007); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333332575); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333332575); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(125.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 587.2, 123.95833333332007); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333332007); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333332575); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333332575); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(125.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 587.2, 123.95833333332007); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333332007); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333332575); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333332575); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(125.0);
    tone(pin, 233.12, 117.70833333332575); // Bb3
    delay(125.0);
    tone(pin, 233.12, 117.70833333332575); // Bb3
    delay(125.0);
    tone(pin, 587.2, 123.95833333332007); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333332007); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333332575); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333332575); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(125.0);
    tone(pin, 261.6, 117.70833333332575); // C4
    delay(125.0);
    tone(pin, 261.6, 117.70833333332575); // C4
    delay(125.0);
    tone(pin, 587.2, 123.95833333332007); // D5
    delay(250.0);
    tone(pin, 440.0, 123.95833333332007); // A4
    delay(375.0);
    tone(pin, 415.36, 117.70833333332575); // Ab4
    delay(250.0);
    tone(pin, 392.0, 117.70833333332575); // G4
    delay(250.0);
    tone(pin, 349.28, 236.45833333333144); // F4
    delay(250.0);
    tone(pin, 293.6, 117.70833333332575); // D4
    delay(125.0);
    tone(pin, 349.28, 117.70833333332575); // F4
    delay(125.0);
    tone(pin, 392.0, 117.70833333332575); // G4

    delay(1000); // Pause for 1 second
}
